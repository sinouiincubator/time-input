{"version":3,"sources":["D:/Users/jacki/Documents/GitHub/time-input/src/utils/time-format-number.ts","D:/Users/jacki/Documents/GitHub/time-input/src/constants.ts","D:/Users/jacki/Documents/GitHub/time-input/src/utils/getNextTimeValue.ts","D:/Users/jacki/Documents/GitHub/time-input/src/NumberInput.tsx","D:/Users/jacki/Documents/GitHub/time-input/src/utils/parseTimeStr.ts","D:/Users/jacki/Documents/GitHub/time-input/src/TimeInputWrapper.tsx","D:/Users/jacki/Documents/GitHub/time-input/src/TimeInputActions.tsx","D:/Users/jacki/Documents/GitHub/time-input/src/TimeInput.tsx","D:/Users/jacki/Documents/GitHub/time-input/docs/src/CustomStyleTimeInput.ts","D:/Users/jacki/Documents/GitHub/time-input/docs/index.mdx"],"names":["parseNumStr","str","parseInt","replace","formatNumValue","num","add","value","max","prevValue","Number","isNaN","currentValue","EMPTY_VALUE","NUMBER_REGEXP","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_TAB","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_BACKSPACE","KEY_DELETE","getNextTimeValue","key","substr","substring","Math","min","NumberInput","React","forwardRef","ref","onChange","onKeyDown","onInputEnd","onFocus","onBlur","rest","keyIndexRef","useRef","addNumToText","fireInputEndEvent","current","data-testid","className","event","stopPropagation","preventDefault","test","readOnly","toNumValue","parseTimeStr","split","first","last","TimeInputWrapper","styled","InputWrapper","props","theme","palette","text","primary","background","appBar","focused","memo","handleClear","handleUp","handleDown","BaseButton","onClick","TimeInput","style","disabled","error","id","name","useState","hour","setHourState","minute","setMinuteState","isFocusing","setIsFocusing","hourElementRef","minuteElementRef","isMinuteActiveRef","delayTimerIdRef","timeRef","useEffect","newHour","newMinute","focusHour","useCallback","focus","focusMinute","changeTime","isValidTime","isEmptyTime","handleStepChange","classNames","clearTimeout","target","persist","setTimeout","CustomStyleTimeInput","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","setValue","type","of","isMDXComponent"],"mappings":"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","file":"static/js/docs-index.cb2eac4d.js","sourcesContent":["/**\n * 解析时间数字字符串\n *\n * @param str\n */\nexport function parseNumStr(str: string) {\n  if (str === '0') {\n    return 0;\n  }\n\n  return parseInt(str.replace(/^0/, ''), 10);\n}\n\n/**\n * 格式化时间数字\n *\n * @param num 数字\n */\nexport function formatNumValue(num: number) {\n  return num < 10 ? `0${num}` : `${num}`;\n}\n\n/**\n * 在value上增加num\n *\n * @param value 原始值\n * @param max 最大值\n * @param num 新增的数字\n */\nexport function add(value: string, max: number, num: number) {\n  const prevValue = parseNumStr(value);\n\n  if (Number.isNaN(prevValue)) {\n    return '00';\n  }\n  const currentValue = prevValue + num;\n  if (currentValue < 0) {\n    return formatNumValue(max);\n  }\n  if (currentValue > max) {\n    return formatNumValue(0);\n  }\n  return formatNumValue(currentValue);\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const EMPTY_VALUE = '--';\nexport const NUMBER_REGEXP = /^[0-9]$/;\nexport const KEY_ARROW_UP = 'ArrowUp';\nexport const KEY_ARROW_DOWN = 'ArrowDown';\nexport const KEY_TAB = 'Tab';\nexport const KEY_ARROW_LEFT = 'ArrowLeft';\nexport const KEY_ARROW_RIGHT = 'ArrowRight';\nexport const KEY_BACKSPACE = 'Backspace';\nexport const KEY_DELETE = 'Delete';\n","import { parseNumStr } from './time-format-number';\n\n/**\n * 获取下一个时间值\n *\n * @param value 原始值\n * @param max 最大值\n * @param key 新的个位数\n */\nfunction getNextTimeValue(value: string, max: number, key: string) {\n  if (Number.isNaN(parseNumStr(value))) {\n    return parseInt(key, 10);\n  }\n  const currentValue =\n    parseNumStr(value) === max || parseNumStr(value.substr(1)) * 10 > max\n      ? key\n      : `${value.substring(1)}${key}`;\n  return Math.min(max, parseNumStr(currentValue));\n}\n\nexport default getNextTimeValue;\n","import React, { useRef } from 'react';\nimport { parseNumStr, add, formatNumValue } from './utils/time-format-number';\nimport {\n  KEY_TAB,\n  NUMBER_REGEXP,\n  KEY_ARROW_UP,\n  KEY_ARROW_DOWN,\n  KEY_BACKSPACE,\n  KEY_DELETE,\n  EMPTY_VALUE,\n} from './constants';\nimport getNextTimeValue from './utils/getNextTimeValue';\n\ninterface Props {\n  id?: string;\n  name?: string;\n  value: string;\n  onChange: (value: string) => void;\n  onInputEnd?: () => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  max: number;\n  ref?: React.Ref<HTMLInputElement>;\n}\n\n/**\n * 两位数字输入框\n */\nconst NumberInput: React.SFC<Props> = React.forwardRef(\n  (\n    {\n      value,\n      onChange,\n      onKeyDown,\n      onInputEnd,\n      onFocus,\n      onBlur,\n      max,\n      ...rest\n    }: Props,\n    ref?: React.Ref<HTMLInputElement>,\n  ) => {\n    const keyIndexRef = useRef<number>(0);\n\n    /**\n     * 在文本内容上加上指定数字\n     *\n     * @param num 数字\n     */\n    const addNumToText = (num: number) => {\n      onChange(add(value, max, num));\n    };\n\n    /**\n     * 触发输入结束事件\n     */\n    function fireInputEndEvent() {\n      keyIndexRef.current = 0;\n      if (onInputEnd) {\n        onInputEnd();\n      }\n    }\n\n    /**\n     * 变更值\n     *\n     * @param num 新的值\n     */\n    function changeValue(num: number) {\n      if ((num < 10 && num * 10 > max) || num >= max) {\n        fireInputEndEvent();\n      }\n\n      onChange(formatNumValue(Math.min(max, num)));\n    }\n\n    /**\n     * 处理键盘事件\n     */\n    function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n      const { key } = event;\n\n      if (key !== KEY_TAB) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      if (NUMBER_REGEXP.test(key)) {\n        changeValue(getNextTimeValue(value, max, key));\n        if (Number.isNaN(parseNumStr(value))) {\n          keyIndexRef.current = 1;\n        } else if (keyIndexRef.current === 1) {\n          fireInputEndEvent();\n        } else {\n          keyIndexRef.current = 1;\n        }\n      } else if (key === KEY_ARROW_UP) {\n        addNumToText(1);\n      } else if (key === KEY_ARROW_DOWN) {\n        addNumToText(-1);\n      } else if (key === KEY_BACKSPACE || key === KEY_DELETE) {\n        onChange(EMPTY_VALUE);\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    }\n\n    function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n      keyIndexRef.current = 0;\n      if (onBlur) {\n        onBlur(event);\n      }\n    }\n\n    return (\n      <input\n        data-testid=\"timeNumberInput\"\n        className=\"sinoui-time-input__number-input\"\n        onKeyDown={handleKeyDown}\n        onBlur={handleBlur}\n        onFocus={onFocus}\n        ref={ref}\n        value={value}\n        readOnly\n        {...rest}\n      />\n    );\n  },\n);\n\nexport default NumberInput;\n","import { EMPTY_VALUE } from '../constants';\nimport { parseNumStr, formatNumValue } from './time-format-number';\n\nfunction toNumValue(str: string) {\n  return formatNumValue(!Number.isNaN(parseNumStr(str)) ? parseNumStr(str) : 0);\n}\n\nexport default function parseTimeStr(value?: string): [string, string] {\n  if (value) {\n    const [first, last] = value.split(':');\n    return [toNumValue(first), toNumValue(last)];\n  }\n  return [EMPTY_VALUE, EMPTY_VALUE];\n}\n","import styled from 'sinoui-components/styles';\nimport { InputWrapper } from 'sinoui-components/TextInput';\n\nconst TimeInputWrapper = styled(InputWrapper)`\n  display: inline-flex;\n  flex-direction: row;\n  font-size: 1rem;\n  font-family: monospace;\n  align-items: center;\n  height: 32px;\n\n  color: ${(props) => props.theme.palette.text.primary};\n\n  .sinoui-time-input-text-content {\n    padding-left: 2px;\n    padding-right: 2px;\n  }\n\n  .sinoui-time-input__number-input {\n    display: inline-block;\n    padding: 2px;\n    line-height: 1.5em;\n    cursor: default;\n    caret-color: transparent;\n    outline: transparent;\n    border: none;\n    background: transparent;\n    width: 1.2em;\n    color: inherit;\n    transition: background-color 0.3s;\n    font-size: inherit;\n  }\n\n  .sinoui-time-input__number-input:focus {\n    background-color: #b5d5ff;\n  }\n\n  .sinoui-time-input__clear-action {\n    visibility: hidden;\n\n    color: ${(props) => props.theme.palette.primary[500]};\n    font-weight: 700;\n    height: 1rem;\n    width: 1rem;\n  }\n\n  .sinoui-time-input__actions {\n    visibility: hidden;\n\n    width: 20px;\n    height: 30px;\n    background-color: ${(props) => props.theme.palette.background.appBar};\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    color: ${(props) => props.theme.palette.text.primary};\n  }\n\n  .sinoui-time-input__actions > * {\n    transition: background-color 0.3s;\n  }\n\n  ${(props) =>\n    props.focused &&\n    `\n    & .sinoui-time-input__actions,\n    &.sinoui-time-input-contains-value .sinoui-time-input__clear-action {\n      visibility: visible;\n    }\n  `}\n\n  &:hover .sinoui-time-input__actions,\n  &.sinoui-time-input-contains-value:hover .sinoui-time-input__clear-action {\n    visibility: visible;\n  }\n\n  .sinoui-time-input__actions > *:hover {\n    background-color: #e5e2e2;\n  }\n`;\n\nexport default TimeInputWrapper;\n","import React from 'react';\nimport BaseButton from 'sinoui-components/BaseButton';\nimport { MdClear, MdExpandLess, MdExpandMore } from 'react-icons/md';\n\n/**\n * 时间输入框中的动作按钮\n */\nfunction TimeInputActions({\n  handleClear,\n  handleUp,\n  handleDown,\n}: {\n  handleClear: () => void;\n  handleUp: () => void;\n  handleDown: () => void;\n}) {\n  return (\n    <>\n      <BaseButton\n        data-testid=\"timeInputClearAction\"\n        className=\"sinoui-time-input__clear-action\"\n        onClick={handleClear}\n      >\n        <MdClear />\n      </BaseButton>\n      <div className=\"sinoui-time-input__actions\">\n        <BaseButton\n          className=\"sinoui-time-input__up-action\"\n          onClick={handleUp}\n          data-testid=\"timeInputUpAction\"\n        >\n          <MdExpandLess />\n        </BaseButton>\n        <BaseButton\n          className=\"sinoui-time-input__down-action\"\n          onClick={handleDown}\n          data-testid=\"timeInputDownAction\"\n        >\n          <MdExpandMore />\n        </BaseButton>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(TimeInputActions);\n","import React, { useRef, useState, useEffect, useCallback } from 'react';\nimport classNames from 'classnames';\nimport NumberInput from './NumberInput';\nimport parseTimeStr from './utils/parseTimeStr';\nimport { EMPTY_VALUE, KEY_ARROW_RIGHT, KEY_ARROW_LEFT } from './constants';\nimport { add } from './utils/time-format-number';\nimport TimeInputWrapper from './TimeInputWrapper';\nimport TimeInputActions from './TimeInputActions';\n\nexport interface Props {\n  /**\n   * 时间输入框值。例如 ''、 01:12、 13:12。只支持 24 小时制时间格式，不支持 12 小时制时间格式。\n   */\n  value?: string;\n  /**\n   * 添加值变更事件监听器\n   */\n  onChange?: (value: string) => void;\n  /**\n   * 指定输入框的类名\n   */\n  className?: string;\n  /**\n   * 指定输入框的css样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 只读\n   */\n  readOnly?: boolean;\n  /**\n   * 不可用\n   */\n  disabled?: boolean;\n\n  /**\n   * 指定时间输入框是否检验错误，如果是，则输入框显示验证错误 UI 。默认为 false 。\n   */\n  error?: boolean;\n\n  /**\n   * 添加聚焦事件监听器\n   */\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\n  /**\n   * 添加失去焦点事件监听器\n   */\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\n  /**\n   * 表单项名称\n   */\n  name?: string;\n\n  /**\n   * DOM 元素 id\n   */\n  id?: string;\n}\n\n/**\n * 时间输入框组件\n */\nfunction TimeInput({\n  value,\n  onChange,\n  className,\n  style,\n  readOnly,\n  disabled,\n  error,\n  onFocus,\n  onBlur,\n  id,\n  name,\n}: Props) {\n  const [hour, setHourState] = useState(() => parseTimeStr(value)[0]);\n  const [minute, setMinuteState] = useState(() => parseTimeStr(value)[1]);\n  const [isFocusing, setIsFocusing] = useState(false);\n  const hourElementRef = useRef<HTMLInputElement>(null);\n  const minuteElementRef = useRef<HTMLInputElement>(null);\n  const isMinuteActiveRef = useRef<boolean>(false);\n  const delayTimerIdRef = useRef<number>(-1);\n  const timeRef = useRef<[string, string]>([hour, minute]);\n\n  useEffect(() => {\n    // 同步变化的value属性\n    const [newHour, newMinute] = parseTimeStr(value);\n    setHourState(newHour);\n    setMinuteState(newMinute);\n    timeRef.current = [newHour, newMinute];\n  }, [value]);\n\n  // 获取到活跃态输入框\n  function active() {\n    return isMinuteActiveRef.current ? 'minute' : 'hour';\n  }\n\n  // 聚焦小时输入框\n  const focusHour = useCallback(() => {\n    if (hourElementRef.current) {\n      hourElementRef.current.focus();\n    }\n  }, []);\n\n  // 聚焦分钟输入框\n  const focusMinute = useCallback(() => {\n    if (minuteElementRef.current) {\n      minuteElementRef.current.focus();\n    }\n  }, []);\n\n  // 变更时间值\n  const changeTime = useCallback(\n    (newHour: string, newMinute: string) => {\n      const isValidTime = newHour !== EMPTY_VALUE && newMinute !== EMPTY_VALUE;\n      const isEmptyTime = newHour === EMPTY_VALUE && newMinute === EMPTY_VALUE;\n\n      setHourState(newHour);\n      setMinuteState(newMinute);\n      timeRef.current = [newHour, newMinute];\n\n      if ((isValidTime || isEmptyTime) && onChange) {\n        onChange(isEmptyTime ? '' : `${newHour}:${newMinute}`);\n      }\n    },\n    [onChange],\n  );\n\n  // 处理小时输入框的输入结束事件\n  const handleHourInputEnd = () => {\n    focusMinute();\n  };\n\n  // 处理小时输入框的键盘事件\n  const handleHourInputKeyDown = (\n    event: React.KeyboardEvent<HTMLDivElement>,\n  ) => {\n    const { key } = event;\n\n    if (key === KEY_ARROW_RIGHT) {\n      focusMinute();\n    }\n  };\n\n  // 处理分钟输入框的键盘事件\n  const handleMinuteInputKeyDown = (\n    event: React.KeyboardEvent<HTMLDivElement>,\n  ) => {\n    const { key } = event;\n\n    if (key === KEY_ARROW_LEFT) {\n      focusHour();\n    }\n  };\n\n  // 清空值\n  const handleClear = useCallback(() => {\n    focusHour();\n    changeTime(EMPTY_VALUE, EMPTY_VALUE);\n  }, [focusHour, changeTime]);\n\n  // 处理步进值变化（适合处理加一、减一这样的操作）\n  const handleStepChange = useCallback(\n    (num: number) => {\n      if (active() === 'hour') {\n        changeTime(add(timeRef.current[0], 23, num), timeRef.current[1]);\n        focusHour();\n      } else {\n        changeTime(timeRef.current[0], add(timeRef.current[1], 59, num));\n        focusMinute();\n      }\n    },\n    [changeTime, focusHour, focusMinute],\n  );\n\n  const handleUp = useCallback(() => {\n    handleStepChange(1);\n  }, [handleStepChange]);\n\n  const handleDown = useCallback(() => {\n    handleStepChange(-1);\n  }, [handleStepChange]);\n\n  // 处理聚焦事件\n  const handleFocus = (event: React.FocusEvent<HTMLDivElement>) => {\n    clearTimeout(delayTimerIdRef.current);\n\n    const { target } = event;\n\n    if (target === hourElementRef.current) {\n      isMinuteActiveRef.current = false;\n    }\n\n    if (target === minuteElementRef.current) {\n      isMinuteActiveRef.current = true;\n    }\n\n    if (!isFocusing) {\n      setIsFocusing(true);\n      if (onFocus) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onFocus(event as any);\n      }\n    }\n  };\n\n  // 处理失去焦点事件\n  const handleBlur = (event: React.FocusEvent<HTMLDivElement>) => {\n    clearTimeout(delayTimerIdRef.current);\n\n    if (onBlur) {\n      event.persist();\n    }\n\n    // 因点击三个操作按钮（清除、上、下）会出现blur和focus事件，所以需要延迟处理blur，以判断是否是此种情况失去的焦点\n    delayTimerIdRef.current = setTimeout(() => {\n      setIsFocusing(false);\n      isMinuteActiveRef.current = false;\n      if (onBlur) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onBlur(event as any);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, 100) as any;\n  };\n\n  if (readOnly || disabled) {\n    return (\n      <TimeInputWrapper\n        className={classNames('sinoui-time-input', className, {\n          'sinoui-time-input-contains-value':\n            hour !== EMPTY_VALUE || minute !== EMPTY_VALUE,\n        })}\n        disabled={disabled}\n        readOnly={readOnly}\n        data-testid=\"timeInput\"\n        error={error}\n      >\n        <div className=\"sinoui-time-input-text-content\">\n          {hour}:{minute}\n        </div>\n      </TimeInputWrapper>\n    );\n  }\n\n  return (\n    <TimeInputWrapper\n      data-testid=\"timeInput\"\n      className={classNames('sinoui-time-input', className, {\n        'sinoui-time-input-contains-value':\n          hour !== EMPTY_VALUE || minute !== EMPTY_VALUE,\n      })}\n      style={style}\n      focused={isFocusing}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      error={error}\n    >\n      <NumberInput\n        value={hour}\n        onChange={(newHour) => changeTime(newHour, minute)}\n        max={23}\n        onInputEnd={handleHourInputEnd}\n        onKeyDown={handleHourInputKeyDown}\n        ref={hourElementRef}\n        name={name}\n        id={id}\n      />\n      <span>:</span>\n      <NumberInput\n        value={minute}\n        max={59}\n        ref={minuteElementRef}\n        onChange={(newMinute) => changeTime(hour, newMinute)}\n        onKeyDown={handleMinuteInputKeyDown}\n        name={name}\n      />\n      <TimeInputActions\n        handleClear={handleClear}\n        handleUp={handleUp}\n        handleDown={handleDown}\n      />\n    </TimeInputWrapper>\n  );\n}\n\nexport default TimeInput;\n","import styled from 'styled-components';\nimport TimeInput from '../../src/TimeInput';\n\nconst CustomStyleTimeInput = styled(TimeInput)`\n  &&& {\n    color: green;\n  }\n`;\n\nexport default CustomStyleTimeInput;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport TimeInput from '../src/TimeInput';\nimport CustomStyleTimeInput from './src/CustomStyleTimeInput';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"时间输入框-timeinput\"\n    }}>{`时间输入框 `}<inlineCode parentName=\"h1\">{`TimeInput`}</inlineCode></h1>\n    <p>{`用于输入时间的键盘友好的 React 组件。 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sinouiincubator/time-input\"\n      }}>{`源码`}</a>{`、 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sinouiincubator/time-input/issues\"\n      }}>{`issue`}</a></p>\n    <h2 {...{\n      \"id\": \"安装\"\n    }}>{`安装`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinouiincubator/time-input\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"使用\"\n    }}>{`使用`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from 'react';\nimport TimeInput from '@sinouiincubator/time-input';\n\nfunction Demo() {\n  const [value, setValue] = useState('12:34');\n\n  return <TimeInput value={value} onChange={setValue} />;\n}\n`}</code></pre>\n    <p>{`效果如下：`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(\\'12:34\\')\\n  return <TimeInput value={value} onChange={setValue} />\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      TimeInput,\n      CustomStyleTimeInput\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('12:34');\n        return <TimeInput value={value} onChange={setValue} mdxType=\"TimeInput\" />;\n      }}\n    </Playground>\n    <p>{`对比一下原生时间元素（在 Chrome 中查看）：`}</p>\n    <Playground __position={1} __code={'<input type=\\\"time\\\" value=\\\"12:34\\\" />'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      TimeInput,\n      CustomStyleTimeInput\n    }} mdxType=\"Playground\">\n  <input type=\"time\" value=\"12:34\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"特性\"\n    }}>{`特性`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`UI 与 Chrome 的 `}<inlineCode parentName=\"li\">{`<input type=\"time\" />`}</inlineCode>{` 一致。`}</li>\n      <li parentName=\"ul\">{`支持 IE 11+ 和现代浏览器。`}</li>\n      <li parentName=\"ul\">{`键盘友好`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`可以输入时间`}</li>\n          <li parentName=\"ul\">{`上、下方向键调整时间`}</li>\n          <li parentName=\"ul\">{`左、右和 tab 键在小时和分钟输入框之间切换`}</li>\n          <li parentName=\"ul\">{`删除（Delete）、回格（Backspace）键清除时间`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`支持清除、上调、下调时间的按钮`}</li>\n      <li parentName=\"ul\">{`100% 测试覆盖率`}</li>\n      <li parentName=\"ul\">{`支持自定义样式`}</li>\n      <li parentName=\"ul\">{`易于与`}<a parentName=\"li\" {...{\n          \"href\": \"https://jaredpalmer.com/formik/\"\n        }}>{`Formik`}</a>{`、`}<a parentName=\"li\" {...{\n          \"href\": \"https://sinoui.github.io/sinoui-forms-library/\"\n        }}>{`@sinoui/rx-form-state`}</a>{`等表单库集成`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"属性\"\n    }}>{`属性`}</h2>\n    <Props of={TimeInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"输入框状态\"\n    }}>{`输入框状态`}</h2>\n    <p>{`时间输入框除了正常态之外，还支持只读（ readOnly ）、不可用（ disabled ）、校验错误（ error ）三种 UI 状态。效果如下所示。`}</p>\n    <h3 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h3>\n    <TimeInput value=\"12:00\" mdxType=\"TimeInput\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TimeInput value=\"12:00\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"readonly\"\n    }}>{`readOnly`}</h3>\n    <TimeInput value=\"12:00\" readOnly mdxType=\"TimeInput\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TimeInput value=\"12:00\" readOnly />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"disabled\"\n    }}>{`disabled`}</h3>\n    <TimeInput value=\"12:00\" disabled mdxType=\"TimeInput\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TimeInput value=\"12:00\" disabled />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"error\"\n    }}>{`error`}</h3>\n    <TimeInput value=\"12:00\" error mdxType=\"TimeInput\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TimeInput value=\"12:00\" error />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"时间值\"\n    }}>{`时间值`}</h2>\n    <p><inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 处理的值是形如 `}<inlineCode parentName=\"p\">{`02:12`}</inlineCode>{` 这样的时间，目前只支持 `}<inlineCode parentName=\"p\">{`24`}</inlineCode>{` 小时制，不支持 `}<inlineCode parentName=\"p\">{`12`}</inlineCode>{` 小时制的时间格式。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`限制：如果输入框中的时间没有输入完整，则不会向外发送值变更事件，即不会调用 `}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{` 属性，只有当输入了完整的时间，才会向外发送值变更事件。`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`重点：不建议指定 `}<inlineCode parentName=\"p\">{`''`}</inlineCode>{`，应指定 `}<inlineCode parentName=\"p\">{`'00:00'`}</inlineCode>{` 这样的默认值。`}</p>\n    </blockquote>\n    <p>{`指定 `}<inlineCode parentName=\"p\">{`''`}</inlineCode>{` 的情况：`}</p>\n    <Playground __position={7} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  return (\\n    <>\\n      <TimeInput value={value} onChange={setValue} />\\n      <div>输入的时间值：{value}</div>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      TimeInput,\n      CustomStyleTimeInput\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('');\n        return <>\n        <TimeInput value={value} onChange={setValue} mdxType=\"TimeInput\" />\n        <div>输入的时间值：{value}</div>\n      </>;\n      }}\n    </Playground>\n    <p>{`指定有效时间值的情况：`}</p>\n    <Playground __position={8} __code={'() => {\\n  const [value, setValue] = useState(\\'00:00\\')\\n  return (\\n    <>\\n      <TimeInput value={value} onChange={setValue} />\\n      <div>输入的时间值：{value}</div>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      TimeInput,\n      CustomStyleTimeInput\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('00:00');\n        return <>\n        <TimeInput value={value} onChange={setValue} mdxType=\"TimeInput\" />\n        <div>输入的时间值：{value}</div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"与-sinouiforms-集成\"\n    }}>{`与 `}<inlineCode parentName=\"h2\">{`@sinoui/forms`}</inlineCode>{` 集成`}</h2>\n    <p><inlineCode parentName=\"p\">{`@sinoui/forms`}</inlineCode>{` 采用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://jaredpalmer.com/formik/\"\n      }}>{`Formik`}</a>{` 作为状态管理的库。 `}<inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 可以与 `}<inlineCode parentName=\"p\">{`@sinoui/forms`}</inlineCode>{` 集成使用，如下所示：`}</p>\n    <p>{`先定义`}<inlineCode parentName=\"p\">{`TimeInputField`}</inlineCode>{`组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Field } from '@sinoui/forms';\nimport TimeInput from '@sinouiincubator/time-input';\n\nexport default function TimeInputField(props) {\n  return <Field component={TimeInput} {...props} />;\n}\n`}</code></pre>\n    <p>{`然后就可以使用 `}<inlineCode parentName=\"p\">{`TimeInputField`}</inlineCode>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport Form, { FormItem, Label } from '@sinoui/forms';\nimport TimeInputField from './TimeInputField';\n\nfunction Demo() {\n  return (\n    <Form>\n      <FormItem>\n        <Label>时间</Label>\n        <TimeInputField name=\"startTime\" />\n      </FormItem>\n      <FormItem>\n        <Label>结束时间</Label>\n        <TimeInputField name=\"endTime\" />\n      </FormItem>\n    </Form>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"与-sinouirx-form-state-集成\"\n    }}>{`与 `}<inlineCode parentName=\"h2\">{`@sinoui/rx-form-state`}</inlineCode>{` 集成`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://sinoui.github.io/sinoui-forms-library/\"\n      }}>{`@sinoui/rx-form-state`}</a>{`是高性能表单状态管理库。`}<inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 与 `}<inlineCode parentName=\"p\">{`@sinoui/rx-form-state`}</inlineCode>{` 的集成与 `}<inlineCode parentName=\"p\">{`@sinoui/forms`}</inlineCode>{` 类似。如下示例：`}</p>\n    <p>{`先定义`}<inlineCode parentName=\"p\">{`TimeInputField`}</inlineCode>{`组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Field } from '@sinoui/sinoui-components-forms';\nimport TimeInput from '@sinouiincubator/time-input';\n\nexport default function TimeInputField(props) {\n  return <Field component={TimeInput} {...props} />;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Form, FormItem, Label } from '@sinoui/sinoui-components-forms';\nimport TimeInputField from './TimeInputField';\n\nfunction Demo() {\n  return (\n    <Form>\n      <FormItem>\n        <Label>时间</Label>\n        <TimeInputField name=\"startTime\" />\n      </FormItem>\n      <FormItem>\n        <Label>结束时间</Label>\n        <TimeInputField name=\"endTime\" />\n      </FormItem>\n    </Form>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"样式定制\"\n    }}>{`样式定制`}</h2>\n    <p><inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 支持多种方式设定样式，包括：`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`style`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`className`}</inlineCode></li>\n      <li parentName=\"ul\">{`styled-components`}</li>\n    </ul>\n    <p>{`可以参考 `}<inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 的 DOM 结构定制 `}<inlineCode parentName=\"p\">{`TimeInput`}</inlineCode>{` 内部元素的样式：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`div.sinoui-time-input\n|__ input.sinoui-time-input__number-input 小时输入框\n|__ input.sinoui-time-input__number-input 分钟输入框\n|__ button.sinoui-time-input__clear-action 清空值按钮\n|__ div.sinoui-time-input__actions\n  |__ button.sinoui-time-input__up-action 向上按钮\n  |__ button.sinoui-time-input__down-action 向下按钮\n`}</code></pre>\n    <p>{`例如，字体颜色定制为 `}<inlineCode parentName=\"p\">{`green`}</inlineCode>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const CustomTimeInput = styled(TimeInput)\\`\n  &&& {\n    color: green;\n  }\n\\`;\n`}</code></pre>\n    <Playground __position={9} __code={'<CustomStyleTimeInput />'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      TimeInput,\n      CustomStyleTimeInput\n    }} mdxType=\"Playground\">\n  <CustomStyleTimeInput mdxType=\"CustomStyleTimeInput\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}